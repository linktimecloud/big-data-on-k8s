apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry-cluster
  namespace: default
  labels:
    app: schema-registry-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry-cluster
  template:
    metadata:
      labels:
        app: schema-registry-cluster
    spec:
      containers:
        - name: schema-registry
          image: {{schema_registry_image}}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8085
              protocol: TCP
          env:
            - name: BOOTSTRAP_SERVERS
              value: "PLAINTEXT://kafka-cluster-strimzi-kafka-0.kafka-cluster-strimzi-kafka-brokers.default.svc.cluster.local:9092"
            - name: KAFKASTORE_TIMEOUT_MS
              value: "2000"
            - name: CLIENT_KERBEROS_ENABLED
              value: "false"
#          resources:
#            limits:
#              cpu: '1'
#              memory: 2Gi
#            requests:
#              cpu: '1'
#              memory: 2Gi
          livenessProbe:
            httpGet:
              path: /subjects
              port: 8085
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /subjects
              port: 8085
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry-cluster-svc
  namespace: default
  labels:
    app: schema-registry-cluster
spec:
  ports:
    - name: port-tcp-8085
      protocol: TCP
      port: 8085
      targetPort: 8085
  selector:
    app: schema-registry-cluster
  type: ClusterIP
